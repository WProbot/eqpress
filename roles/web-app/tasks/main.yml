---
# web-app/tasks/main.yml

- name: ensure /var/www exists and is owned by root
  file:
    path: /var/www
    state: directory
    owner: root
    group: root
    mode: '0755'
  tags:
    - var-www-root

- name: Add apt keys required for https://packages.sury.org/php
  apt_key:
          url: 'https://packages.sury.org/php/apt.gpg'
  tags:
    - php

- name: Add repos from https://packages.sury.org/php
  apt_repository:
    repo: deb https://packages.sury.org/php/ {{ansible_distribution_release}} main
    state: present
    filename: sury-php
  register: suryrepo
  tags:
    - php

- name: Update the apt-get cache
  apt:
    update_cache: yes
  when: suryrepo.changed is defined and suryrepo.changed

- name: Install packages
  apt:
    name:
      - nginx-extras
      - nginx-common
      - "php{{php_version}}"
      - "php{{php_version}}-cli"
      - "php{{php_version}}-curl"
      - "php{{php_version}}-dev"
      - "php{{php_version}}-fpm"
      - "php{{php_version}}-gd"
      - "php{{php_version}}-imagick"
      - "php{{php_version}}-json"
      - "php{{php_version}}-memcached"
      - "php{{php_version}}-mysql"
      - "php{{php_version}}-redis"
      - "php{{php_version}}-ssh2"
      - "php{{php_version}}-ldap"
      - "php{{php_version}}-intl"
      - "php{{php_version}}-mbstring"
      - "php{{php_version}}-bz2"
      - "php{{php_version}}-zip"
      - "php{{php_version}}-xml"
      - "php{{php_version}}-bcmath"
     #- "php{{php_version}}-mcrypt"
    state: present
  tags:
    - nginx
    - php

- name: ensure nginx will start at boot
  systemd:
    name: nginx
    enabled: yes
  tags:
    - nginx

- name: ensure php{{php_version}}-fpm will start at boot
  systemd:
    name: "php{{php_version}}-fpm"
    enabled: yes
  tags:
    - php

# TODO: try to do without this. Remove if not needed.
#- name: ensure nginx is stopped during initial config install
#  service:
#    name: nginx
#    state: stopped
#  tags:
#    - nginx

- name: remove default nginx config symlink
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  tags:
    - nginx

- name: remove default html directory /var/www/html
  file:
    path: /var/www/html
    state: absent
  tags:
    - nginx

- name: create directory ramdisk for nginx cache for tmpfs mount
  file:
    path: /var/cache/nginx
    owner: www-data
    group: root
    state: directory
    mode: '0750'
  tags:
    - nginx

- name: add tmpfs mount to fstab to /var/cache/nginx
  lineinfile:
    dest: /etc/fstab
    regexp: "/var/cache/nginx"
    line: "tmpfs /var/cache/nginx tmpfs rw,noexec,nosuid,nodev,mode=0750,uid=www-data 0 0"
    state: present
  notify:
    - remount
  tags:
    - nginx

- name: create nginx-ondisk directory
  file:
    path: /var/cache/nginx-ondisk
    state: directory
    owner: www-data
    group: root
    mode: '0750'
  tags:
    - nginx

- name: create modules- directories
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - modules-enabled
    - modules-available
  tags:
    - nginx
    - nginx_config

- name: link modules
  file:
    src: "/usr/share/nginx/modules-available/{{ item.file }}"
    dest: "/etc/nginx/modules-enabled/{{ item.pri }}-{{ item.file }}"
    state: link
  loop:
    - { pri: 10, file: mod-http-ndk.conf }
    - { pri: 50, file: mod-http-auth-pam.conf }
    - { pri: 50, file: mod-http-geoip.conf }
    - { pri: 50, file: mod-http-image-filter.conf }
    - { pri: 50, file: mod-http-lua.conf }
    - { pri: 50, file: mod-http-perl.conf }
    - { pri: 50, file: mod-http-xslt-filter.conf }
    - { pri: 50, file: mod-mail.conf }
    - { pri: 50, file: mod-stream.conf }
  tags:
    - nginx
    - nginx_config

- name: create nginx common include directory
  file:
    path: /etc/nginx/eqpress
    state: directory
    owner: root
    group: staff
    mode: '0755'
  tags:
    - nginx
    - nginx_config

- name: copy nginx config files
  copy:
    src: "{{ files }}/etc/nginx/eqpress/{{ item }}"
    dest: "/etc/nginx/eqpress/{{ item }}"
    owner: root
    group: staff
    mode: '0664'
  loop:
    - common_adminer.conf
    - common_location.conf
    - common_location_ep.conf
    - common_login_limiter.conf
    - common_multisite_3.5.conf
    - common_w3tc.conf
    - lua_block_post_noreferrer.lua
    - lua_block_post_noreferrer_on.lua
    - lua_block_wplogin_noreferrer.lua
  notify:
    - reload nginx
  tags:
    - nginx
    - nginx_config

- name: copy nginx common ssl config template
  template:
    src: "{{ files }}/etc/nginx/eqpress/common_eqpress_ssl.conf.j2"
    dest: /etc/nginx/eqpress/common_eqpress_ssl.conf
    owner: root
    group: staff
    mode: '0664'
  notify:
    - reload nginx
  tags:
    - nginx
    - nginx_config
    - nginx_ssl

- name: copy nginx cache config only during initial install
  copy:
    src: "{{ files }}/etc/nginx/eqpress/cache.conf"
    dest: /etc/nginx/eqpress/cache.conf
    owner: root
    group: staff
    mode: '0664'
    force: no
  tags:
    - nginx
    - nginx_cache

- name: copy nginx blacklist
  copy:
    src: "{{ files }}/etc/nginx/eqpress/blacklist.conf"
    dest: /etc/nginxi/eqpress/blacklist.conf
    owner: root
    group: staff
    mode: '0664'
  notify:
    - reload nginx
  tags:
    - nginx
    - nginx_config
    - nginx_blacklist

- name: copy nginx fastcgi config template
  template:
    src: "{{ files }}/etc/nginx/eqpress/common_fastcgi.conf.j2"
    dest: /etc/nginx/eqpress/common_fastcgi.conf
    owner: root
    group: staff
    mode: '0664'
  notify:
    - reload nginx
  tags:
    - nginx
    - nginx_config
    - nginx_fastcgi

- name: copy common_log_formats.conf.j2 as template
  template:
    src: "{{ files }}/etc/nginx/eqpress/common_log_formats.conf.j2"
    dest: /etc/nginx/eqpress/common_log_formats.conf
    owner: root
    group: staff
    mode: '0664'
  notify:
    - reload nginx
  tags:
    - nginx
    - nginx_config

- name: copy nginx.conf as template
  template:
    src: "{{ files }}/etc/nginx/nginx.conf.j2"
    dest: /etc/nginx/nginx.conf
    owner: root
    group: staff
    mode: '0664'
  notify:
    - reload nginx
  tags:
    - nginx
    - nginx_config

- name: copy nginx easypress.ca config template
  template:
    src: "{{ files }}/etc/nginx/sites-available/easypress.ca.j2"
    dest: /etc/nginx/sites-available/easypress.ca
    owner: root
    group: staff
    mode: '0664'
  notify:
    - reload nginx
  when: auto_provision_host is not defined
  tags:
    - nginx
    - nginx_config
    - nginx_config_easypress

- name: nginx 'easypress.ca' config template for auto-provision host. ** will not overwrite **
  template:
    src: "{{ files }}/etc/nginx/sites-available/easypress.ca-auto-provision.j2"
    dest: "/etc/nginx/sites-available/easypress.ca"
    owner: root
    group: staff
    mode: '0664'
    force: no
    backup: yes
  notify:
    - reload nginx
  when: auto_provision_host is defined and auto_provision_host
  tags:
    - nginx
    - nginx_config
    - nginx_config_easypress

- name: install nginx htpasswd file for restricted pages
  template:
    src: "{{ files }}/etc/nginx/restricted_pages.htpasswd.j2"
    dest: /etc/nginx/restricted_pages.htpasswd
    owner: www-data
    group: www-data
    mode: '0440'
  when: auto_provision_host is not defined
  notify:
    - reload nginx
  tags:
    - nginx
    - nginx_config
    - nginx_htpasswd

- name: link easypress.ca nginx config
  file:
    src: /etc/nginx/sites-available/easypress.ca
    dest: /etc/nginx/sites-enabled/easypress.ca
    state: link
  tags:
    - ep-console

- name: copy custom logrotate config for nginx access logs
  copy:
    src: "{{ files }}/etc/logrotate.d/nginx"
    dest: /etc/logrotate.d
    owner: root
    group: root
    mode: '0644'
  tags:
    - nginx
    - logrotate

- name: update nginx open file limits using ulimit in default file
  copy:
    src: "{{ files }}/etc/default/nginx"
    dest: /etc/default
    owner: root
    group: root
    mode: '0644'
  tags:
    - nginx
    - limits

- name: start nginx
  systemd:
    name: nginx
    state: started
  tags:
    - nginx

- name: create PHP opcache error log
  file:
    path: /var/log/php-opcache-errors.log
    owner: root
    group: www-data
    mode: '0660'
    state: touch
  tags:
    - php
    - opcache
    - php-config

- name: create PHP session directory
  file:
    dest: /var/tmp/php_sessions
    owner: www-data
    group: root
    mode: '0750'
    state: directory
  tags:
    - php
    - php-config

- name: copy php config
  template:
    src: "{{ files }}/etc/php{{php_version}}/{{ item.templ }}"
    dest: "/etc/php{{php_version}}/{{ item.file }}"
    owner: root
    group: www-data
    mode: '0640'
  loop:
    - { templ: "cli/php.ini.j2", file: "cli/php.ini" }
    - { templ: "fpm/php.ini.j2", file: "fpm/php.ini" }
    - { templ: "fpm/php-fpm.conf.j2", file: "fpm/php-fpm.conf" }
    - { templ: "fpm/pool.d/www.conf.j2", file: "fpm/pool.d/www.conf" }
    - { templ: "fpm/pool.d/easypress-admin.conf.j2", file: "fpm/pool.d/easypress-admin.conf" }
    - { templ: "mods-available/opcache.ini.j2", file: "mods-available/opcache.ini" }
  notify:
    - reload php-fpm
  tags:
    - php
    - php-config

- name: copy auto-provision php config
  template:
    src: "{{ files }}/etc/php{{php_version}}/fpm/pool.d/auto-provision.conf.j2"
    dest: /etc/php{{php_version}}/fpm/pool.d/auto-provision.conf
    owner: root
    group: www-data
    mode: '0640'
  when: auto_provision_host is defined
  notify:
    - reload php-fpm
  tags:
    - php
    - php-config
    - auto-provision

- name: start php{{php_version}}-fpm
  systemd:
    name: php{{php_version}}-fpm
    state: started
  tags:
    - php

