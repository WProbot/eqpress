---
# roles/mysql-percona/tasks/main.yml

- name: Add apt keys required for Percona
  apt_key: url='http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x1C4CBDCDCD2EFD2A'

- name: Add repos for Percona
  apt_repository: repo='deb http://repo.percona.com/apt wheezy main'

- name: Update the apt-get cache
  apt: update_cache=yes

- name: create mysql config directory
  file: path=/etc/mysql owner=root group=root mode=0755 state=directory
  tags: [mysql, mysql_config]

- name: Copy my.cnf
  template: src={{ files }}/etc/mysql/my.cnf.j2 dest=/etc/mysql/my.cnf
  tags: [mysql, mysql_config]

- name: Install packages
  action: apt pkg={{ item }} state=installed
  with_items:
    - percona-server-server-5.6
    - percona-server-client-5.6
    - percona-toolkit
    - percona-xtrabackup
  tags: mysql

- name: Update mysql root password for all root accounts.
  mysql_user: name=root host={{ item }} password={{ mysql_root_db_pass }}
  with_items:
    - "{{ ansible_hostname }}"
    - "{{ inventory_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost
  tags: mysql

- name: Copy .my.cnf file
  template: src={{ files }}/root/.my.cnf.j2 dest=/root/.my.cnf mode=0600
  tags: [mysql, mysql_config]

- name: Copy .my.cnf-mysqladmin file
  template: src={{ files }}/root/.my.cnf-mysqladmin.j2 dest=/root/.my.cnf-mysqladmin mode=0600
  tags: [mysql, mysql_config]

- name: ensure anonymous users are not in the database
  mysql_user: name='' host={{ item }} state=absent
  with_items:
    - localhost
    - "{{ inventory_hostname }}"
  tags: mysql

- name: remove the test database
  mysql_db: name=test state=absent
  tags: mysql

- name: Create the mysqladmin user mysql server monitoring
  mysql_user: name={{ mysql_admin_user.username }}  host="{{ item }}" password={{ mysql_admin_user.password|default("password") }} priv=*.*:"SUPER, PROCESS" state=present
  with_items:
    - localhost
    - "{{ inventory_hostname }}"
    - "monitor.easypress.ca"
  tags: [mysql, repl]

- name: reset permissions on SSL key
  file: path=/etc/ssl/easypress/{{ inventory_hostname}}.key owner=root group=mysql mode=0640
  tags: [mysql, ssl]

- name: Copy webstats DB table structure to server
  copy: src={{ files }}/etc/mysql/webstats.sql dest=/tmp
  when: mysql_repl_role == 'master'
  tags: [webstats, mysql]

- name: Create webstats user
  mysql_user: name={{ mysql_webstats.username }} host="localhost" password={{ mysql_webstats.password }} priv=*.*:"ALL" state=present
  when: mysql_repl_role == 'master'
  tags: [webstats, mysql]

- name: Create webstats DB
  mysql_db: name={{ mysql_webstats.db }} state=present
  when: mysql_repl_role == 'master'
  tags: [webstats, mysql]

- name: Create webstats tables
  mysql_db: name={{ mysql_webstats.db }} state=import target=/tmp/webstats.sql
  when: mysql_repl_role == 'master'
  tags: [webstats, mysql]

