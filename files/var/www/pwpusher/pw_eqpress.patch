diff --git a/pwpusher_private/interface.php b/pwpusher_private/interface.php
index 48d900d..9634382 100644
--- a/pwpusher_private/interface.php
+++ b/pwpusher_private/interface.php
@@ -144,7 +144,7 @@ function getFormElements()
     
     //Create basic credential form layout
     $returnString = '<div class="jumbotron"><h3 style="font-weight:bold;">' . translate('createLink') . '</h3>' .
-        '<form action="' . $_SERVER['PHP_SELF'] . '" method="post">';
+        '<form action="' . htmlspecialchars($_SERVER['PHP_SELF'], ENT_QUOTES, "utf-8") . '" method="post">';
     
      //Display creator username if email and authentication are configured.
     if ($enableEmail && ($requireApacheAuth || $requireCASAuth)) {
diff --git a/pwpusher_public/pw.php b/pwpusher_public/pw.php
index 5f10ffd..55b368f 100644
--- a/pwpusher_public/pw.php
+++ b/pwpusher_public/pw.php
@@ -14,10 +14,12 @@ require '../pwpusher_private/interface.php';
 require '../pwpusher_private/CAS/CAS.php';
 
 //Print the header
+if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
 print getHeader();
 
 //Print the navbar
 /** @noinspection PhpToStringImplementationInspection */
+if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
 print getNavBar();
 
 //Find user arguments, if any.
@@ -55,13 +57,16 @@ if ($arguments['func'] == 'none' || $arguments == false) {
         //This section is a courtesy check; PHP_AUTH_USER can possibly be spoofed
         //if web auth isn't configured.
         /** @noinspection PhpToStringImplementationInspection */
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getError(translate('userNotAuthenticated'));
         /** @noinspection PhpToStringImplementationInspection */
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getFooter();
         die();
     }
 
     //Get form elements
+    if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
     print getFormElements();
 
 } elseif ($arguments['func'] == 'post') {
@@ -79,8 +84,10 @@ if ($arguments['func'] == 'none' || $arguments == false) {
         //This section is a courtesy check; PHP_AUTH_USER can possibly be spoofed
         //if web auth isn't configured.
         /** @noinspection PhpToStringImplementationInspection */
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getError(translate('userNotAuthenticated'));
         /** @noinspection PhpToStringImplementationInspection */
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getFooter();
         die();
     }
@@ -88,9 +95,11 @@ if ($arguments['func'] == 'none' || $arguments == false) {
     //Check key size to ensure it meets AES requirements.
     if (!correctKeySize()) {
         /** @noinspection PhpToStringImplementationInspection */
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getError(translate('databaseErrorGeneric'));
         error_log("PHPassword Configuration Error: Encryption key must be of length 16, 24, or 32.\n");
         /** @noinspection PhpToStringImplementationInspection */
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getFooter();
         die();
     }
@@ -111,7 +120,7 @@ if ($arguments['func'] == 'none' || $arguments == false) {
 
     //Generate the retrieval URL.
     $url = sprintf(
-        "https://%s%s?id=%s", $_SERVER['HTTP_HOST'], $_SERVER['PHP_SELF'], urlencode($id)
+        "https://%s%s?id=%s", $_SERVER['HTTP_HOST'], htmlspecialchars($_SERVER['PHP_SELF'], ENT_QUOTES, 'utf-8'), urlencode($id)
     );
 
     //Send email if configured and if the email has been filled out
@@ -127,12 +136,16 @@ if ($arguments['func'] == 'none' || $arguments == false) {
 
     //If the URL is configured to be displayed print the URL and associated functions
     if ($displayURL) {
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getURL($url);
     } else {
         /** @noinspection PhpToStringImplementationInspection */
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getSuccess(translate('credentialsCreated'));
     }
 
+    if ( isset( $_POST['url_only'] ) && "yes" === $_POST['url_only'] )
+    print $url;
 
 } elseif ($arguments['func'] == 'get') {
 
@@ -146,8 +159,10 @@ if ($arguments['func'] == 'none' || $arguments == false) {
         //This section is a courtesy check; PHP_AUTH_USER can possibly be spoofed
         //if web auth isn't configured.
         /** @noinspection PhpToStringImplementationInspection */
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getError(translate('userNotAuthenticated'));
         /** @noinspection PhpToStringImplementationInspection */
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getFooter();
         die();
     }
@@ -157,25 +172,29 @@ if ($arguments['func'] == 'none' || $arguments == false) {
 
     //If no valid entry, deny access and wipe hypothetically existing records
     if (empty($result[0])) {
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print('<div class="jumbotron" style="padding:10px 60px;">
             <h3 style="font-weight:bold;margin-bottom:20px;margin-top:20px">' . translate('expiredLink') . '</h3>');
         //print getError('Link Expired');
 
 
     } else {
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print('<div class="jumbotron">');
         //Otherwise, return the credential.
         //Decrypt the credential
         $cred = decryptCred($result[0]['seccred']);
 
         //Print credentials
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getCred($cred);
-
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print ('<a href="' . $_SERVER['REQUEST_URI'] . '&amp;remove=1" class="btn btn-danger previous">Delete Link</a>');
 
         //Unset the credential variable
         unset($cred);
     }
+    if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
     print('</div>');
 } elseif ($arguments['func'] == 'remove') {
     //If credential removal is specifically requested
@@ -189,7 +208,9 @@ if ($arguments['func'] == 'none' || $arguments == false) {
     } elseif ($requireApacheAuth && empty($_SERVER['PHP_AUTH_USER']) && $protectRetrieve) {
         //This section is a courtesy check; PHP_AUTH_USER can possibly be spoofed
         //if web auth isn't configured.
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getError(translate('userNotAuthenticated'));
+        if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
         print getFooter();
         die();
     }
@@ -200,4 +221,5 @@ if ($arguments['func'] == 'none' || $arguments == false) {
 
 //Print the footer
 /** @noinspection PhpToStringImplementationInspection */
-print getFooter();
\ No newline at end of file
+if (! (isset( $_POST['url_only'] ) && "yes" === $_POST['url_only']) )
+print getFooter();
